services:

  api:
    image: lianshufeng/tasker:latest
    volumes:
      - ./conf:/app/conf
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    command: python -m app.main
    restart: always


  worker:
    image: lianshufeng/tasker:latest
    environment:
      DOCKER_REGISTRIES: ${docker_registries} #work启动登录到镜像(私服)地址
      DOCKER_USERNAME: ${docker_username}
      DOCKER_PASSWORD: ${docker_password}
    volumes:
      - ./conf:/app/conf
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery -A app.tasks worker --loglevel=info --pool=solo --concurrency=1
    restart: always
    deploy:
      replicas: 3 # 副本数量为3


  celery-exporter:
    image: danihodovic/celery-exporter:latest #0.12.0
    container_name: celery-exporter
    ports:
      - "9808:9808"
    environment:
      - CE_BROKER_URL=redis://:${redis_password}@redis:6379/0
      - CE_RESULT_BACKEND=redis://:${redis_password}@redis:6379/1
    restart: always
  prometheus:
    image: prom/prometheus:latest #v3.4.0
    container_name: prometheus
    depends_on:
      - celery-exporter
    ports:
      - "9090:9090"
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml  # 将 Prometheus 配置挂载到容器中
    restart: always
  grafana: # import https://grafana.com/grafana/dashboards/20076-celery-tasks-dashboard/
    image: grafana/grafana:latest #12.0.1
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${grafana_password}  # 默认的管理员密码
    volumes:
      - ./store/grafana/data:/var/lib/grafana  # 持久化 Grafana 数据
    depends_on:
      - prometheus
    restart: always
